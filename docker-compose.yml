version: '3.8'

services:
  db:
    image: postgres:16
    container_name: chess-postgres
    env_file: .env
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-chessgames} -d ${POSTGRES_DB:-chessgames}"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: chess-rest-api
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    ports:
      - "8080:8080"
    restart: unless-stopped

  python-data-fetcher:
    build:
      context: ./scripts/Chess-Analysing-Pi
    container_name: chess-data-fetcher
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    restart: unless-stopped
    command: >
      sh -c "
        echo 'Starting Chess.com data fetcher service...' &&
        while true; do
          echo 'Fetching latest games from Chess.com...' &&
          python3 ChessDB_updating_service.py std &&
          echo 'Waiting 24 hours for next update...' &&
          sleep 86400
        done
      "

  python-analyzer:
    build:
      context: ./scripts/Chess-Analysing-Pi
    container_name: chess-analyzer
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    restart: unless-stopped
    command: >
      sh -c "
        echo 'Starting Chess game analyzer service...' &&
        while true; do
          echo 'Analyzing games with Stockfish...' &&
          python3 Chess_analyzing_service.py &&
          echo 'Waiting 1 hour for next analysis...' &&
          sleep 3600
        done
      "

volumes:
  db-data:
